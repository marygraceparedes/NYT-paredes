{"mappings":"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","sources":["<anon>","src/script.js"],"sourcesContent":["const apiKey = \"te3UIjW4hkkAFeNfLl5FNBkTsAO1oRtX\";\nconst blogContainer = document.getElementById(\"bolg-container\");\nconst searchField = document.getElementById(\"search-input\");\nconst searchButton = document.getElementById(\"search-button\");\nconst topicList = document.getElementById(\"topic-list\");\nasync function fetchRandomNews() {\n    try {\n        const apiURL = `https://api.nytimes.com/svc/topstories/v2/home.json?api-key=${apiKey}`;\n        const response = await fetch(apiURL);\n        const data = await response.json();\n        if (data.results) return data.results;\n        else {\n            console.error(\"Error: No articles found\");\n            return [];\n        }\n    } catch (error) {\n        console.error(\"Error fetching random news\", error);\n        return [];\n    }\n}\nasync function fetchNewsQuery(query) {\n    try {\n        const apiUrl = `https://api.nytimes.com/svc/search/v2/articlesearch.json?q=${query}&api-key=${apiKey}`;\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        if (data.response && data.response.docs) return data.response.docs;\n        else {\n            console.error(\"Error: No articles found for this query\");\n            return [];\n        }\n    } catch (error) {\n        console.error(\"Error fetching news by query\", error);\n        return [];\n    }\n}\nasync function fetchNewsByTopic(topic) {\n    try {\n        const apiUrl = `https://api.nytimes.com/svc/topstories/v2/${topic}.json?api-key=${apiKey}`;\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        if (data.results) return data.results;\n        else {\n            console.error(\"Error: No articles found for this topic\");\n            return [];\n        }\n    } catch (error) {\n        console.error(\"Error fetching news by topic\", error);\n        return [];\n    }\n}\nfunction displayBlogs(articles) {\n    blogContainer.innerHTML = \"\";\n    if (!articles || articles.length === 0) {\n        blogContainer.innerHTML = \"<p>No articles available at the moment.</p>\";\n        return;\n    }\n    articles.forEach((article)=>{\n        const blogCard = document.createElement(\"div\");\n        blogCard.classList.add(\"bolg-card\");\n        const img = document.createElement(\"img\");\n        img.src = article.multimedia && article.multimedia[0] ? article.multimedia[0].url : \"\";\n        img.alt = article.title || article.headline?.main || \"No title available\";\n        const title = document.createElement(\"h2\");\n        const truncatedTitle = (article.title || article.headline?.main) && (article.title || article.headline?.main).length > 30 ? (article.title || article.headline.main).slice(0, 30) + \"...\" : article.title || article.headline?.main || \"No title available\";\n        title.textContent = truncatedTitle;\n        const description = document.createElement(\"p\");\n        const abstract = article.abstract || article.lead_paragraph || \"No description available\";\n        const truncatedDes = abstract.length > 120 ? abstract.slice(0, 120) + \"...\" : abstract;\n        description.textContent = truncatedDes;\n        blogCard.appendChild(img);\n        blogCard.appendChild(title);\n        blogCard.appendChild(description);\n        blogCard.addEventListener(\"click\", ()=>{\n            window.open(article.url || article.web_url, \"_blank\");\n        });\n        blogContainer.appendChild(blogCard);\n    });\n}\nsearchButton.addEventListener(\"click\", async ()=>{\n    const query = searchField.value.trim();\n    if (query !== \"\") try {\n        const articles = await fetchNewsQuery(query);\n        displayBlogs(articles);\n    } catch (error) {\n        console.log(\"Error fetching news by query\", error);\n    }\n});\nif (topicList) topicList.querySelectorAll(\"li\").forEach((item)=>{\n    item.addEventListener(\"click\", async ()=>{\n        const topic = item.getAttribute(\"data-topic\");\n        try {\n            const articles = await fetchNewsByTopic(topic);\n            displayBlogs(articles);\n        } catch (error) {\n            console.log(`Error fetching news for topic ${topic}`, error);\n        }\n    });\n});\n(async ()=>{\n    try {\n        const articles = await fetchRandomNews();\n        displayBlogs(articles);\n    } catch (error) {\n        console.error(\"Error fetching random news\", error);\n    }\n})();\n\n//# sourceMappingURL=index.ddf749f2.js.map\n","const apiKey = \"te3UIjW4hkkAFeNfLl5FNBkTsAO1oRtX\"; \r\n\r\nconst blogContainer = document.getElementById(\"bolg-container\");\r\nconst searchField = document.getElementById('search-input');\r\nconst searchButton = document.getElementById('search-button');\r\nconst topicList = document.getElementById('topic-list');\r\n\r\nasync function fetchRandomNews() {\r\n    try {\r\n        const apiURL = `https://api.nytimes.com/svc/topstories/v2/home.json?api-key=${apiKey}`;\r\n        const response = await fetch(apiURL);\r\n        const data = await response.json();\r\n        if (data.results) {\r\n            return data.results;\r\n        } else {\r\n            console.error(\"Error: No articles found\");\r\n            return [];\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error fetching random news\", error);\r\n        return [];\r\n    }\r\n}\r\n\r\nasync function fetchNewsQuery(query) {\r\n    try {\r\n        const apiUrl = `https://api.nytimes.com/svc/search/v2/articlesearch.json?q=${query}&api-key=${apiKey}`;\r\n        const response = await fetch(apiUrl);\r\n        const data = await response.json();\r\n        if (data.response && data.response.docs) {\r\n            return data.response.docs;\r\n        } else {\r\n            console.error(\"Error: No articles found for this query\");\r\n            return [];\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error fetching news by query\", error);\r\n        return [];\r\n    }\r\n}\r\n\r\nasync function fetchNewsByTopic(topic) {\r\n    try {\r\n        const apiUrl = `https://api.nytimes.com/svc/topstories/v2/${topic}.json?api-key=${apiKey}`;\r\n        const response = await fetch(apiUrl);\r\n        const data = await response.json();\r\n        if (data.results) {\r\n            return data.results;\r\n        } else {\r\n            console.error(\"Error: No articles found for this topic\");\r\n            return [];\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error fetching news by topic\", error);\r\n        return [];\r\n    }\r\n}\r\n\r\nfunction displayBlogs(articles) {\r\n    blogContainer.innerHTML = \"\"; \r\n\r\n    if (!articles || articles.length === 0) {\r\n        blogContainer.innerHTML = \"<p>No articles available at the moment.</p>\";\r\n        return;\r\n    }\r\n\r\n    articles.forEach((article) => {\r\n        const blogCard = document.createElement(\"div\");\r\n        blogCard.classList.add(\"bolg-card\");\r\n\r\n        const img = document.createElement(\"img\");\r\n        img.src = article.multimedia && article.multimedia[0]\r\n            ? article.multimedia[0].url\r\n            : \"\"; \r\n        img.alt = article.title || article.headline?.main || \"No title available\";\r\n\r\n        const title = document.createElement(\"h2\");\r\n        const truncatedTitle = (article.title || article.headline?.main) && (article.title || article.headline?.main).length > 30\r\n            ? (article.title || article.headline.main).slice(0, 30) + \"...\"\r\n            : article.title || article.headline?.main || \"No title available\";\r\n        title.textContent = truncatedTitle;\r\n\r\n        const description = document.createElement(\"p\");\r\n        const abstract = article.abstract || article.lead_paragraph || \"No description available\";\r\n        const truncatedDes = abstract.length > 120\r\n            ? abstract.slice(0, 120) + \"...\"\r\n            : abstract;\r\n        description.textContent = truncatedDes;\r\n\r\n        blogCard.appendChild(img);\r\n        blogCard.appendChild(title);\r\n        blogCard.appendChild(description);\r\n\r\n        blogCard.addEventListener(\"click\", () => {\r\n            window.open(article.url || article.web_url, \"_blank\");\r\n        });\r\n\r\n        blogContainer.appendChild(blogCard);\r\n    });\r\n}\r\n\r\nsearchButton.addEventListener(\"click\", async () => {\r\n    const query = searchField.value.trim();\r\n    if (query !== \"\") {\r\n        try {\r\n            const articles = await fetchNewsQuery(query);\r\n            displayBlogs(articles);\r\n        } catch (error) {\r\n            console.log(\"Error fetching news by query\", error);\r\n        }\r\n    }\r\n});\r\n\r\nif (topicList) {\r\n    topicList.querySelectorAll('li').forEach(item => {\r\n        item.addEventListener('click', async () => {\r\n            const topic = item.getAttribute('data-topic');\r\n            try {\r\n                const articles = await fetchNewsByTopic(topic);\r\n                displayBlogs(articles);\r\n            } catch (error) {\r\n                console.log(`Error fetching news for topic ${topic}`, error);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n(async () => {\r\n    try {\r\n        const articles = await fetchRandomNews();\r\n        displayBlogs(articles);\r\n    } catch (error) {\r\n        console.error(\"Error fetching random news\", error);\r\n    }\r\n})();"],"names":["apiKey","blogContainer","document","getElementById","searchField","searchButton","topicList","fetchRandomNews","apiURL","response","fetch","data","json","results","console","error","fetchNewsQuery","query","apiUrl","docs","fetchNewsByTopic","topic","displayBlogs","articles","innerHTML","length","forEach","article","blogCard","createElement","classList","add","img","src","multimedia","url","alt","title","headline","main","truncatedTitle","slice","textContent","description","abstract","lead_paragraph","truncatedDes","appendChild","addEventListener","window","open","web_url","value","trim","log","querySelectorAll","item","getAttribute"],"version":3,"file":"index.ddf749f2.js.map"}